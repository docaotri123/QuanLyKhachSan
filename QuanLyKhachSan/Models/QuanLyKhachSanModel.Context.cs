//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyKhachSan.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QuanLyKhachSanEntities : DbContext
    {
        public QuanLyKhachSanEntities()
            : base("name=QuanLyKhachSanEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DATPHONG> DATPHONGs { get; set; }
        public virtual DbSet<HOADON> HOADONs { get; set; }
        public virtual DbSet<KHACHHANG> KHACHHANGs { get; set; }
        public virtual DbSet<KHACHSAN> KHACHSANs { get; set; }
        public virtual DbSet<LOAIPHONG> LOAIPHONGs { get; set; }
        public virtual DbSet<PHONG> PHONGs { get; set; }
        public virtual DbSet<TRANGTHAIPHONG> TRANGTHAIPHONGs { get; set; }
    
        public virtual ObjectResult<DanhSachPhong_Result> DanhSachPhong(Nullable<int> maLoaiPhong)
        {
            var maLoaiPhongParameter = maLoaiPhong.HasValue ?
                new ObjectParameter("maLoaiPhong", maLoaiPhong) :
                new ObjectParameter("maLoaiPhong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DanhSachPhong_Result>("DanhSachPhong", maLoaiPhongParameter);
        }
    
        public virtual int ThemKhachHang(string hoTen, string tenDangNhap, string matKhau, string soCMND, string diaChi, string soDienThoai, string moTa, string email)
        {
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("hoTen", hoTen) :
                new ObjectParameter("hoTen", typeof(string));
    
            var tenDangNhapParameter = tenDangNhap != null ?
                new ObjectParameter("tenDangNhap", tenDangNhap) :
                new ObjectParameter("tenDangNhap", typeof(string));
    
            var matKhauParameter = matKhau != null ?
                new ObjectParameter("matKhau", matKhau) :
                new ObjectParameter("matKhau", typeof(string));
    
            var soCMNDParameter = soCMND != null ?
                new ObjectParameter("soCMND", soCMND) :
                new ObjectParameter("soCMND", typeof(string));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("diaChi", diaChi) :
                new ObjectParameter("diaChi", typeof(string));
    
            var soDienThoaiParameter = soDienThoai != null ?
                new ObjectParameter("soDienThoai", soDienThoai) :
                new ObjectParameter("soDienThoai", typeof(string));
    
            var moTaParameter = moTa != null ?
                new ObjectParameter("moTa", moTa) :
                new ObjectParameter("moTa", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemKhachHang", hoTenParameter, tenDangNhapParameter, matKhauParameter, soCMNDParameter, diaChiParameter, soDienThoaiParameter, moTaParameter, emailParameter);
        }
    
        public virtual ObjectResult<TimKiemGiaVaThanhPho_Result> TimKiemGiaVaThanhPho(Nullable<decimal> gia, string thanhPho)
        {
            var giaParameter = gia.HasValue ?
                new ObjectParameter("gia", gia) :
                new ObjectParameter("gia", typeof(decimal));
    
            var thanhPhoParameter = thanhPho != null ?
                new ObjectParameter("thanhPho", thanhPho) :
                new ObjectParameter("thanhPho", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TimKiemGiaVaThanhPho_Result>("TimKiemGiaVaThanhPho", giaParameter, thanhPhoParameter);
        }
    
        public virtual ObjectResult<TimKiemSaoVaThanhPho_Result> TimKiemSaoVaThanhPho(Nullable<int> sao, string thanhPho)
        {
            var saoParameter = sao.HasValue ?
                new ObjectParameter("sao", sao) :
                new ObjectParameter("sao", typeof(int));
    
            var thanhPhoParameter = thanhPho != null ?
                new ObjectParameter("thanhPho", thanhPho) :
                new ObjectParameter("thanhPho", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TimKiemSaoVaThanhPho_Result>("TimKiemSaoVaThanhPho", saoParameter, thanhPhoParameter);
        }
    
        public virtual ObjectResult<TrangThaiPhongTheoNgay_Result> TrangThaiPhongTheoNgay(Nullable<int> maLoaiPhong, Nullable<System.DateTime> date)
        {
            var maLoaiPhongParameter = maLoaiPhong.HasValue ?
                new ObjectParameter("maLoaiPhong", maLoaiPhong) :
                new ObjectParameter("maLoaiPhong", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TrangThaiPhongTheoNgay_Result>("TrangThaiPhongTheoNgay", maLoaiPhongParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TrangThaiPhongDaDatTheoNgay(Nullable<int> maLoaiPhong, Nullable<System.DateTime> date)
        {
            var maLoaiPhongParameter = maLoaiPhong.HasValue ?
                new ObjectParameter("maLoaiPhong", maLoaiPhong) :
                new ObjectParameter("maLoaiPhong", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TrangThaiPhongDaDatTheoNgay", maLoaiPhongParameter, dateParameter);
        }
    }
}
